name: "[CI] Tests 0.29"

on:
  push:
    branches:
      - main
  pull_request:

env:
  CI: 1
  SIMPLECOV: 1
  NODE_VERSION: 18.17.1
  RUBY_VERSION: 3.2.6
  CHROME_VERSION: "126.0.6478.182"
  BUNDLE_GEMFILE: Gemfile
  DISABLE_SPRING: 1
  DISPLAY: ":99"
  PARALLEL_TEST_PROCESSORS: 2
  SHAKAPACKER_RUNTIME_COMPILE: "false"
  NODE_ENV: "test"
  RAILS_ENV: "test"
  RUBYOPT: '-W:no-deprecated'
  DATABASE_USERNAME: postgres
  DATABASE_PASSWORD: postgres
  DATABASE_HOST: localhost
  POSTGRES_PASSWORD: postgres

jobs:
  build:
    name: Build & Precompile
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - uses: actions/cache@v4
        id: app-cache
        with:
          path: ./spec/decidim_dummy_app/
          key: app-${{ github.sha }}
          restore-keys: app-${{ github.sha }}

      - run: bundle exec rake test_app
        name: Create test app
        shell: "bash"

      - run: mkdir -p ./spec/decidim_dummy_app/tmp/screenshots
        name: Create the screenshots folder
        shell: "bash"

      - run: bundle exec rails shakapacker:compile
        name: Precompile assets
        working-directory: ./spec/decidim_dummy_app/
        shell: "bash"
        env:
          BUNDLE_GEMFILE: ../../Gemfile

      - run: tar -zcf /tmp/testapp-env.tar.gz ./spec/decidim_dummy_app

      - uses: actions/upload-artifact@v4
        with:
          name: workspace
          path: /tmp/testapp-env.tar.gz

  tests-latest:
    name: Tests latest
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        include:
          - rspec: spec/awesome_summary_spec.rb
            features: disabled
          - rspec: spec\/(?!system)
            features: enabled
          - rspec: spec/system/admin
            features: enabled
          - rspec: spec/system/public
            features: enabled
          - rspec: spec/system/awesome_map
            features: enabled
      fail-fast: false

    services:
      postgres:
        image: postgres:14
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - run: |
          sudo apt update
          sudo apt install libu2f-udev
          wget --no-verbose -O /tmp/chrome.deb https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${{ env.CHROME_VERSION }}-1_amd64.deb
          sudo dpkg -i /tmp/chrome.deb
          rm /tmp/chrome.deb
      - uses: nanasess/setup-chromedriver@v2
        name: Install Chrome version ${{ env.CHROME_VERSION }}
        with:
          chromedriver-version: ${{ env.CHROME_VERSION }}
      - run: |
          sudo apt install wkhtmltopdf imagemagick 7zip

      - uses: actions/download-artifact@v4
        with:
          name: workspace
          path: /tmp

      - run: tar -zxf /tmp/testapp-env.tar.gz
        name: Restore application

      - run: bundle exec rake parallel:create parallel:load_schema
        name: Parallel tests
        shell: "bash"
        working-directory: ./spec/decidim_dummy_app/
        env:
          BUNDLE_GEMFILE: ../../Gemfile

      - name: General RSpec with config vars ${{ matrix.features }}
        run: |
          sudo Xvfb -ac $DISPLAY -screen 0 1920x1084x24 > /dev/null 2>&1 &
          ln -s spec/decidim_dummy_app spec/decidim_dummy_app_last
          bundle exec rake parallel:spec['${{ matrix.rspec }}']
        env:
          FEATURES: ${{ matrix.features }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: screenshots
          path: ./spec/decidim_dummy_app/tmp/screenshots
          if-no-files-found: ignore
          overwrite: true
